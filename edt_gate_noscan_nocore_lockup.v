/*
 *    DESC: Generated by DFTAdvisor at Fri Apr 10 13:08:42 2009
 */
module edt_decompressor ( edt_clock , edt_update , edt_channels_in , edt_scan_in );
input   edt_clock , edt_update , edt_channels_in ;
output  [4:0] edt_scan_in ;
  wire nx216 , nx213 , nx210 , nx207 , nx153 , lfsm_vec_1 , nx192 , lfsm_vec_11 , 
       nx24 , nx188 , nx26 , lfsm_vec_10 , nx184 , nx28 , lfsm_vec_9 , nx180 , 
       nx30 , lfsm_vec_8 , nx176 , nx32 , lfsm_vec_7 , nx172 , nx34 , nx168 , 
       nx36 , nx38 , lfsm_vec_4 , nx162 , nx40 , lfsm_vec_3 , nx42 , lfsm_vec_2 , 
       nx44 , nx156 , nx46 , lfsm_vec_5 , lfsm_vec_0 , lfsm_vec_6 , nx149 ;
  wire [10:0] \$dummy  ;

  xnor2  ix75 (.A0 ( nx149 ) , .A1 ( lfsm_vec_6 ) , .Y ( edt_scan_in[0] ));
  xnor2  ix150 (.A0 ( lfsm_vec_0 ) , .A1 ( lfsm_vec_5 ) , .Y ( nx149 ));
  dff  reg_lfsm_vec_0 (.D ( nx46 ) , .CLK ( edt_clock ) , .Q ( lfsm_vec_0 ) , 
     .QB ( \$dummy  [0] ));
  nor02_2x  ix121 (.A0 ( nx156 ) , .A1 ( edt_update ) , .Y ( nx44 ));
  xnor2  ix157 (.A0 ( lfsm_vec_2 ) , .A1 ( edt_channels_in ) , .Y ( nx156 ));
  dff  reg_lfsm_vec_2 (.D ( nx42 ) , .CLK ( edt_clock ) , .Q ( lfsm_vec_2 ) , 
     .QB ( \$dummy  [1] ));
  nor02ii  ix119 (.A0 ( edt_update ) , .A1 ( lfsm_vec_3 ) , .Y ( nx42 ));
  dff  reg_lfsm_vec_3 (.D ( nx40 ) , .CLK ( edt_clock ) , .Q ( lfsm_vec_3 ) , 
     .QB ( \$dummy  [2] ));
  nor02_2x  ix117 (.A0 ( nx162 ) , .A1 ( edt_update ) , .Y ( nx40 ));
  xnor2  ix163 (.A0 ( lfsm_vec_4 ) , .A1 ( edt_channels_in ) , .Y ( nx162 ));
  dff  reg_lfsm_vec_4 (.D ( nx38 ) , .CLK ( edt_clock ) , .Q ( lfsm_vec_4 ) , 
     .QB ( \$dummy  [3] ));
  nor02ii  ix115 (.A0 ( edt_update ) , .A1 ( lfsm_vec_5 ) , .Y ( nx38 ));
  dff  reg_lfsm_vec_5 (.D ( nx36 ) , .CLK ( edt_clock ) , .Q ( lfsm_vec_5 ) , 
     .QB ( \$dummy  [4] ));
  nor02_2x  ix113 (.A0 ( nx168 ) , .A1 ( edt_update ) , .Y ( nx36 ));
  xnor2  ix169 (.A0 ( lfsm_vec_6 ) , .A1 ( edt_channels_in ) , .Y ( nx168 ));
  dff  reg_lfsm_vec_6 (.D ( nx34 ) , .CLK ( edt_clock ) , .Q ( lfsm_vec_6 ) , 
     .QB ( \$dummy  [5] ));
  nor02_2x  ix111 (.A0 ( nx172 ) , .A1 ( edt_update ) , .Y ( nx34 ));
  xnor2  ix173 (.A0 ( lfsm_vec_7 ) , .A1 ( lfsm_vec_3 ) , .Y ( nx172 ));
  dff  reg_lfsm_vec_7 (.D ( nx32 ) , .CLK ( edt_clock ) , .Q ( lfsm_vec_7 ) , 
     .QB ( \$dummy  [6] ));
  nor02_2x  ix109 (.A0 ( nx176 ) , .A1 ( edt_update ) , .Y ( nx32 ));
  xnor2  ix177 (.A0 ( lfsm_vec_8 ) , .A1 ( edt_channels_in ) , .Y ( nx176 ));
  dff  reg_lfsm_vec_8 (.D ( nx30 ) , .CLK ( edt_clock ) , .Q ( lfsm_vec_8 ) , 
     .QB ( \$dummy  [7] ));
  nor02_2x  ix107 (.A0 ( nx180 ) , .A1 ( edt_update ) , .Y ( nx30 ));
  xnor2  ix181 (.A0 ( lfsm_vec_9 ) , .A1 ( lfsm_vec_4 ) , .Y ( nx180 ));
  dff  reg_lfsm_vec_9 (.D ( nx28 ) , .CLK ( edt_clock ) , .Q ( lfsm_vec_9 ) , 
     .QB ( \$dummy  [8] ));
  nor02_2x  ix105 (.A0 ( nx184 ) , .A1 ( edt_update ) , .Y ( nx28 ));
  xnor2  ix185 (.A0 ( lfsm_vec_10 ) , .A1 ( edt_channels_in ) , .Y ( nx184 ));
  dff  reg_lfsm_vec_10 (.D ( nx26 ) , .CLK ( edt_clock ) , .Q ( lfsm_vec_10 ) , 
     .QB ( \$dummy  [9] ));
  nor02_2x  ix103 (.A0 ( nx188 ) , .A1 ( edt_update ) , .Y ( nx26 ));
  dff  reg_lfsm_vec_11 (.D ( nx24 ) , .CLK ( edt_clock ) , .Q ( lfsm_vec_11 ) , 
     .QB ( \$dummy  [10] ));
  nor02_2x  ix101 (.A0 ( nx192 ) , .A1 ( edt_update ) , .Y ( nx24 ));
  xnor2  ix193 (.A0 ( lfsm_vec_0 ) , .A1 ( edt_channels_in ) , .Y ( nx192 ));
  dff  reg_lfsm_vec_1 (.D ( nx44 ) , .CLK ( edt_clock ) , .Q ( lfsm_vec_1 ) , 
     .QB ( nx153 ));
  xnor2  ix79 (.A0 ( nx207 ) , .A1 ( lfsm_vec_10 ) , .Y ( edt_scan_in[1] ));
  xnor2  ix208 (.A0 ( lfsm_vec_4 ) , .A1 ( lfsm_vec_7 ) , .Y ( nx207 ));
  xnor2  ix83 (.A0 ( nx210 ) , .A1 ( lfsm_vec_11 ) , .Y ( edt_scan_in[2] ));
  xnor2  ix87 (.A0 ( nx213 ) , .A1 ( lfsm_vec_8 ) , .Y ( edt_scan_in[3] ));
  xnor2  ix214 (.A0 ( lfsm_vec_0 ) , .A1 ( lfsm_vec_2 ) , .Y ( nx213 ));
  xnor2  ix91 (.A0 ( nx216 ) , .A1 ( lfsm_vec_11 ) , .Y ( edt_scan_in[4] ));
  xnor2  ix217 (.A0 ( lfsm_vec_2 ) , .A1 ( lfsm_vec_9 ) , .Y ( nx216 ));
  nor02ii  ix123 (.A0 ( edt_update ) , .A1 ( lfsm_vec_1 ) , .Y ( nx46 ));
  xor2  ix189 (.A0 ( lfsm_vec_11 ) , .A1 ( nx153 ) , .Y ( nx188 ));
  xor2  ix211 (.A0 ( nx153 ) , .A1 ( lfsm_vec_9 ) , .Y ( nx210 ));
endmodule

module edt_spatial_compactor_5 ( multi_bit_input , single_bit_output );
input   [4:0] multi_bit_input ;
output  single_bit_output ;
  wire nx82 , nx80 , nx78 ;

  xnor2  modgen_xor_6_ix7 (.A0 ( nx78 ) , .A1 ( multi_bit_input[4] ) , .Y 
       ( single_bit_output ));
  xnor2  ix79 (.A0 ( nx80 ) , .A1 ( nx82 ) , .Y ( nx78 ));
  xnor2  ix81 (.A0 ( multi_bit_input[2] ) , .A1 ( multi_bit_input[3] ) , .Y 
       ( nx80 ));
  xnor2  ix83 (.A0 ( multi_bit_input[0] ) , .A1 ( multi_bit_input[1] ) , .Y 
       ( nx82 ));
endmodule

module edt_compactor ( edt_scan_out , masks_for_compactor_0 , edt_channels_out );
input   [4:0] edt_scan_out ;
input   [4:0] masks_for_compactor_0 ;
output  edt_channels_out ;
  wire masked_scan_outputs_0_0 , masked_scan_outputs_0_1 , 
       masked_scan_outputs_0_2 , masked_scan_outputs_0_3 , 
       masked_scan_outputs_0_4 ;

  edt_spatial_compactor_5  compactor1 (.multi_bit_input ({
                          masked_scan_outputs_0_4 , masked_scan_outputs_0_3 ,
                          masked_scan_outputs_0_2 , masked_scan_outputs_0_1 ,
                          masked_scan_outputs_0_0 }) , .single_bit_output 
                         ( edt_channels_out ));
  and02  ix11 (.A0 ( edt_scan_out[0] ) , .A1 ( masks_for_compactor_0[0] ) , .Y 
       ( masked_scan_outputs_0_0 ));
  and02  ix9 (.A0 ( edt_scan_out[1] ) , .A1 ( masks_for_compactor_0[1] ) , .Y 
       ( masked_scan_outputs_0_1 ));
  and02  ix7 (.A0 ( edt_scan_out[2] ) , .A1 ( masks_for_compactor_0[2] ) , .Y 
       ( masked_scan_outputs_0_2 ));
  and02  ix5 (.A0 ( edt_scan_out[3] ) , .A1 ( masks_for_compactor_0[3] ) , .Y 
       ( masked_scan_outputs_0_3 ));
  and02  ix3 (.A0 ( edt_scan_out[4] ) , .A1 ( masks_for_compactor_0[4] ) , .Y 
       ( masked_scan_outputs_0_4 ));
endmodule

module edt_onehot_decoder_3_to_5 ( encoded_masks , decoded_masks );
input   [2:0] encoded_masks ;
output  [4:0] decoded_masks ;
  wire nx147 , nx142 , nx140 , nx137 , nx135 ;

  ao21  ix75 (.A0 ( encoded_masks[2] ) , .A1 ( encoded_masks[1] ) , .B0 
      ( nx135 ) , .Y ( decoded_masks[0] ));
  nor03  ix136 (.A0 ( nx137 ) , .A1 ( encoded_masks[1] ) , .A2 
       ( encoded_masks[2] ) , .Y ( nx135 ));
  inv02  ix138 (.A ( encoded_masks[0] ) , .Y ( nx137 ));
  aoi21  ix63 (.A0 ( nx140 ) , .A1 ( encoded_masks[0] ) , .B0 ( nx142 ) , .Y 
       ( decoded_masks[1] ));
  inv02  ix141 (.A ( encoded_masks[2] ) , .Y ( nx140 ));
  inv02  ix143 (.A ( encoded_masks[1] ) , .Y ( nx142 ));
  aoi21  ix51 (.A0 ( nx140 ) , .A1 ( nx137 ) , .B0 ( nx142 ) , .Y 
       ( decoded_masks[2] ));
  aoi21  ix39 (.A0 ( nx142 ) , .A1 ( encoded_masks[0] ) , .B0 ( nx140 ) , .Y 
       ( decoded_masks[3] ));
  ao21  ix27 (.A0 ( encoded_masks[2] ) , .A1 ( encoded_masks[1] ) , .B0 
      ( nx147 ) , .Y ( decoded_masks[4] ));
  nor03  ix148 (.A0 ( nx137 ) , .A1 ( encoded_masks[1] ) , .A2 ( nx140 ) , .Y 
       ( nx147 ));
endmodule

module edt_controller ( edt_clock , edt_update , edt_channels_in , 
                        edt_channels_out_from_controller , masks_for_compactor_0 );
input   edt_clock , edt_update , edt_channels_in ;
output  edt_channels_out_from_controller ;
output  [4:0] masks_for_compactor_0 ;
  wire nx16 , nx182 , xor_encoded_masks_4 , nx14 , masks_shift_reg_0_1 , nx172 , 
       xor_encoded_masks_3 , nx132 , control_bit , nx12 , masks_shift_reg_0_2 , 
       nx162 , nx10 , masks_shift_reg_0_3 , nx152 , nx6 , masks_shift_reg_0_5 , 
       nx8 , masks_shift_reg_0_4 , nx142 , onehot_decoded_masks_0_0 , 
       onehot_decoded_masks_0_1 , onehot_decoded_masks_0_2 , 
       onehot_decoded_masks_0_3 , onehot_decoded_masks_0_4 , xor_encoded_masks_2 , 
       xor_encoded_masks_1 , xor_encoded_masks_0 ;
  wire [11:0] \$dummy  ;

  edt_onehot_decoder_3_to_5  decoder1 (.encoded_masks ({ xor_encoded_masks_0 ,
                            xor_encoded_masks_1 , xor_encoded_masks_2 }) , 
                           .decoded_masks ({ onehot_decoded_masks_0_4 ,
                            onehot_decoded_masks_0_3 , onehot_decoded_masks_0_2 ,
                            onehot_decoded_masks_0_1 , onehot_decoded_masks_0_0 
                           }));
  dff  reg_masks_hold_reg_0_4 (.D ( nx142 ) , .CLK ( edt_clock ) , .Q 
     ( xor_encoded_masks_0 ) , .QB ( \$dummy  [0] ));
  mux21_ni  ix143 (.A0 ( xor_encoded_masks_0 ) , .A1 ( masks_shift_reg_0_4 ) , 
          .S0 ( edt_update ) , .Y ( nx142 ));
  dff  reg_masks_shift_reg_0_4 (.D ( nx8 ) , .CLK ( edt_clock ) , .Q 
     ( masks_shift_reg_0_4 ) , .QB ( \$dummy  [1] ));
  nor02ii  ix99 (.A0 ( edt_update ) , .A1 ( masks_shift_reg_0_5 ) , .Y ( nx8 ));
  dff  reg_masks_shift_reg_0_5 (.D ( nx6 ) , .CLK ( edt_clock ) , .Q 
     ( masks_shift_reg_0_5 ) , .QB ( \$dummy  [2] ));
  nor02ii  ix97 (.A0 ( edt_update ) , .A1 ( edt_channels_in ) , .Y ( nx6 ));
  dff  reg_masks_hold_reg_0_3 (.D ( nx152 ) , .CLK ( edt_clock ) , .Q 
     ( xor_encoded_masks_1 ) , .QB ( \$dummy  [3] ));
  mux21_ni  ix153 (.A0 ( xor_encoded_masks_1 ) , .A1 ( masks_shift_reg_0_3 ) , 
          .S0 ( edt_update ) , .Y ( nx152 ));
  dff  reg_masks_shift_reg_0_3 (.D ( nx10 ) , .CLK ( edt_clock ) , .Q 
     ( masks_shift_reg_0_3 ) , .QB ( \$dummy  [4] ));
  nor02ii  ix101 (.A0 ( edt_update ) , .A1 ( masks_shift_reg_0_4 ) , .Y ( nx10 ));
  dff  reg_masks_hold_reg_0_2 (.D ( nx162 ) , .CLK ( edt_clock ) , .Q 
     ( xor_encoded_masks_2 ) , .QB ( \$dummy  [5] ));
  mux21_ni  ix163 (.A0 ( xor_encoded_masks_2 ) , .A1 ( masks_shift_reg_0_2 ) , 
          .S0 ( edt_update ) , .Y ( nx162 ));
  dff  reg_masks_shift_reg_0_2 (.D ( nx12 ) , .CLK ( edt_clock ) , .Q 
     ( masks_shift_reg_0_2 ) , .QB ( \$dummy  [6] ));
  nor02ii  ix103 (.A0 ( edt_update ) , .A1 ( masks_shift_reg_0_3 ) , .Y ( nx12 ));
  mux21_ni  ix87 (.A0 ( xor_encoded_masks_0 ) , .A1 ( onehot_decoded_masks_0_0 ) , 
          .S0 ( control_bit ) , .Y ( masks_for_compactor_0[0] ));
  dff  reg_masks_hold_reg_0_5 (.D ( nx132 ) , .CLK ( edt_clock ) , .Q 
     ( control_bit ) , .QB ( \$dummy  [7] ));
  mux21_ni  ix133 (.A0 ( control_bit ) , .A1 ( masks_shift_reg_0_5 ) , .S0 
          ( edt_update ) , .Y ( nx132 ));
  mux21_ni  ix85 (.A0 ( xor_encoded_masks_1 ) , .A1 ( onehot_decoded_masks_0_1 ) , 
          .S0 ( control_bit ) , .Y ( masks_for_compactor_0[1] ));
  mux21_ni  ix83 (.A0 ( xor_encoded_masks_2 ) , .A1 ( onehot_decoded_masks_0_2 ) , 
          .S0 ( control_bit ) , .Y ( masks_for_compactor_0[2] ));
  mux21_ni  ix81 (.A0 ( xor_encoded_masks_3 ) , .A1 ( onehot_decoded_masks_0_3 ) , 
          .S0 ( control_bit ) , .Y ( masks_for_compactor_0[3] ));
  dff  reg_masks_hold_reg_0_1 (.D ( nx172 ) , .CLK ( edt_clock ) , .Q 
     ( xor_encoded_masks_3 ) , .QB ( \$dummy  [8] ));
  mux21_ni  ix173 (.A0 ( xor_encoded_masks_3 ) , .A1 ( masks_shift_reg_0_1 ) , 
          .S0 ( edt_update ) , .Y ( nx172 ));
  dff  reg_masks_shift_reg_0_1 (.D ( nx14 ) , .CLK ( edt_clock ) , .Q 
     ( masks_shift_reg_0_1 ) , .QB ( \$dummy  [9] ));
  nor02ii  ix105 (.A0 ( edt_update ) , .A1 ( masks_shift_reg_0_2 ) , .Y ( nx14 ));
  mux21_ni  ix79 (.A0 ( xor_encoded_masks_4 ) , .A1 ( onehot_decoded_masks_0_4 ) , 
          .S0 ( control_bit ) , .Y ( masks_for_compactor_0[4] ));
  dff  reg_masks_hold_reg_0_0 (.D ( nx182 ) , .CLK ( edt_clock ) , .Q 
     ( xor_encoded_masks_4 ) , .QB ( \$dummy  [10] ));
  mux21_ni  ix183 (.A0 ( xor_encoded_masks_4 ) , .A1 
          ( edt_channels_out_from_controller ) , .S0 ( edt_update ) , .Y 
          ( nx182 ));
  dff  reg_masks_shift_reg_0_0 (.D ( nx16 ) , .CLK ( edt_clock ) , .Q 
     ( edt_channels_out_from_controller ) , .QB ( \$dummy  [11] ));
  nor02ii  ix107 (.A0 ( edt_update ) , .A1 ( masks_shift_reg_0_1 ) , .Y ( nx16 ));
endmodule

module edt_bypass_logic ( edt_bypass , edt_channels_in , edt_channels_out , 
                          edt_scan_in , edt_scan_out , edt_bypass_in , 
                          edt_bypass_out , A );
input   edt_bypass , edt_channels_in , edt_bypass_out , A ;
input   [4:0] edt_scan_out ;
input   [4:0] edt_bypass_in ;
output  edt_channels_out ;
output  [4:0] edt_scan_in ;
  wire net8 , net7 , net6 , net5 , net4 , net3 , net2 , net1 ;

  inv01  uu8 (.A ( A ) , .Y ( net8 ));
  latch  uu7 (.D ( edt_scan_out[3] ) , .CLK ( net8 ) , .Q ( net7 ));
  inv01  uu6 (.A ( A ) , .Y ( net6 ));
  latch  uu5 (.D ( edt_scan_out[2] ) , .CLK ( net6 ) , .Q ( net5 ));
  inv01  uu4 (.A ( A ) , .Y ( net4 ));
  latch  uu3 (.D ( edt_scan_out[1] ) , .CLK ( net4 ) , .Q ( net3 ));
  inv01  uu2 (.A ( A ) , .Y ( net2 ));
  latch  uu1 (.D ( edt_scan_out[0] ) , .CLK ( net2 ) , .Q ( net1 ));
  mux21_ni  ix9 (.A0 ( edt_bypass_in[0] ) , .A1 ( edt_channels_in ) , .S0 
          ( edt_bypass ) , .Y ( edt_scan_in[0] ));
  mux21_ni  ix11 (.A0 ( edt_bypass_in[1] ) , .A1 ( net1 ) , .S0 ( edt_bypass ) , 
          .Y ( edt_scan_in[1] ));
  mux21_ni  ix13 (.A0 ( edt_bypass_in[2] ) , .A1 ( net3 ) , .S0 ( edt_bypass ) , 
          .Y ( edt_scan_in[2] ));
  mux21_ni  ix15 (.A0 ( edt_bypass_in[3] ) , .A1 ( net5 ) , .S0 ( edt_bypass ) , 
          .Y ( edt_scan_in[3] ));
  mux21_ni  ix17 (.A0 ( edt_bypass_in[4] ) , .A1 ( net7 ) , .S0 ( edt_bypass ) , 
          .Y ( edt_scan_in[4] ));
  mux21_ni  ix19 (.A0 ( edt_bypass_out ) , .A1 ( edt_scan_out[4] ) , .S0 
          ( edt_bypass ) , .Y ( edt_channels_out ));
endmodule

module edt ( edt_clock , edt_update , edt_bypass , edt_channels_in , 
             edt_channels_out , edt_scan_in , edt_scan_out , A );
input   edt_clock , edt_update , edt_bypass , edt_channels_in , A ;
input   [4:0] edt_scan_out ;
output  edt_channels_out ;
output  [4:0] edt_scan_in ;
  wire edt_bypass_out , masks_for_compactor_0_0 , masks_for_compactor_0_1 , 
       masks_for_compactor_0_2 , masks_for_compactor_0_3 , 
       masks_for_compactor_0_4 , edt_bypass_in_0 , edt_bypass_in_1 , 
       edt_bypass_in_2 , edt_bypass_in_3 , edt_bypass_in_4 , 
       edt_channels_out_from_controller ;

  edt_decompressor  edt_decompressor_i (.edt_clock ( edt_clock ) , .edt_update 
                  ( edt_update ) , .edt_channels_in 
                  ( edt_channels_out_from_controller ) , .edt_scan_in ({
                   edt_bypass_in_4 , edt_bypass_in_3 , edt_bypass_in_2 ,
                   edt_bypass_in_1 , edt_bypass_in_0 }));
  edt_compactor  edt_compactor_i (.edt_scan_out ( edt_scan_out[4:0] ) , 
               .masks_for_compactor_0 ({ masks_for_compactor_0_4 ,
                masks_for_compactor_0_3 , masks_for_compactor_0_2 ,
                masks_for_compactor_0_1 , masks_for_compactor_0_0 }) , 
               .edt_channels_out ( edt_bypass_out ));
  edt_controller  edt_controller_i (.edt_clock ( edt_clock ) , .edt_update 
                ( edt_update ) , .edt_channels_in ( edt_channels_in ) , 
                .edt_channels_out_from_controller 
                ( edt_channels_out_from_controller ) , .masks_for_compactor_0 ({
                 masks_for_compactor_0_4 , masks_for_compactor_0_3 ,
                 masks_for_compactor_0_2 , masks_for_compactor_0_1 ,
                 masks_for_compactor_0_0 }));
  edt_bypass_logic  edt_bypass_logic_i (.edt_bypass ( edt_bypass ) , 
                  .edt_channels_in ( edt_channels_in ) , .edt_channels_out 
                  ( edt_channels_out ) , .edt_scan_in ( edt_scan_in[4:0] ) , 
                  .edt_scan_out ( edt_scan_out[4:0] ) , .edt_bypass_in ({
                   edt_bypass_in_4 , edt_bypass_in_3 , edt_bypass_in_2 ,
                   edt_bypass_in_1 , edt_bypass_in_0 }) , .edt_bypass_out 
                  ( edt_bypass_out ) , .A ( A ));
endmodule

module edt_top ( clk , ramclk , reset , enable , paddr , pdata , portain , 
                 portbout , portcout , expdin , expdout , expaddr , expread , 
                 expwrite , debugw , debugpc , debuginst , debugstatus , q1 , q2 , 
                 q3 , q4 , scan_en , edt_clock , edt_update , edt_bypass , 
                 edt_channels_in1 , edt_channels_out1 );
input   clk , ramclk , reset , enable , scan_en , edt_clock , edt_update , 
        edt_bypass , edt_channels_in1 ;
input   [11:0] pdata ;
input   [7:0] portain ;
input   [7:0] expdin ;
output  expread , expwrite , q1 , q2 , q3 , q4 , edt_channels_out1 ;
output  [10:0] paddr ;
output  [7:0] portbout ;
output  [7:0] portcout ;
output  [7:0] expdout ;
output  [6:0] expaddr ;
output  [7:0] debugw ;
output  [10:0] debugpc ;
output  [11:0] debuginst ;
output  [7:0] debugstatus ;
  wire edt_scan_out_4 , edt_scan_in_4 , edt_scan_out_3 , edt_scan_in_3 , 
       edt_scan_out_2 , edt_scan_in_2 , edt_scan_out_1 , edt_scan_in_1 , 
       edt_scan_out_0 , edt_scan_in_0 ;

  piccpu  piccpu_i (.clk ( clk ) , .ramclk ( ramclk ) , .reset ( reset ) , 
        .enable ( enable ) , .paddr ( paddr[10:0] ) , .pdata ( pdata[11:0] ) , 
        .portain ( portain[7:0] ) , .portbout ( portbout[7:0] ) , .portcout (
         portcout[7:0] ) , .expdin ( expdin[7:0] ) , .expdout ( expdout[7:0] ) , 
        .expaddr ( expaddr[6:0] ) , .expread ( expread ) , .expwrite 
        ( expwrite ) , .debugw ( debugw[7:0] ) , .debugpc ( debugpc[10:0] ) , 
        .debuginst ( debuginst[11:0] ) , .debugstatus ( debugstatus[7:0] ) , 
        .q1 ( q1 ) , .q2 ( q2 ) , .q3 ( q3 ) , .q4 ( q4 ) , .edt_si1 
        ( edt_scan_in_0 ) , .edt_so1 ( edt_scan_out_0 ) , .edt_si2 
        ( edt_scan_in_1 ) , .edt_so2 ( edt_scan_out_1 ) , .edt_si3 
        ( edt_scan_in_2 ) , .edt_so3 ( edt_scan_out_2 ) , .edt_si4 
        ( edt_scan_in_3 ) , .edt_so4 ( edt_scan_out_3 ) , .edt_si5 
        ( edt_scan_in_4 ) , .edt_so5 ( edt_scan_out_4 ) , .scan_en ( scan_en ));
  edt  edt_i (.edt_clock ( edt_clock ) , .edt_update ( edt_update ) , 
     .edt_bypass ( edt_bypass ) , .edt_channels_in ( edt_channels_in1 ) , 
     .edt_channels_out ( edt_channels_out1 ) , .edt_scan_in ({ edt_scan_in_4 ,
      edt_scan_in_3 , edt_scan_in_2 , edt_scan_in_1 , edt_scan_in_0 }) , 
     .edt_scan_out ({ edt_scan_out_4 , edt_scan_out_3 , edt_scan_out_2 ,
      edt_scan_out_1 , edt_scan_out_0 }) , .A ( edt_clock ));
endmodule

